/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab7p2_michaelmartinez;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.FileChooserUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Michael Mart√≠nez
 */
public class MAIN extends javax.swing.JFrame {

    /**
     * Creates new form MAIN
     */
    public MAIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pp_loadRefresh = new javax.swing.JPopupMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        tf_busqueda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_arbol = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_tabla = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenuItem8.setText("Reload");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        pp_loadRefresh.add(jMenuItem8);

        jMenuItem9.setText("Refresh");
        pp_loadRefresh.add(jMenuItem9);

        jMenuItem10.setText("Limpiar tabla");
        jPopupMenu1.add(jMenuItem10);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("ENTER");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CSVs");
        jt_arbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_arbolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_arbol);

        jt_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "CATEGORY", "PRICE", "AISLE", "BIN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jt_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_tabla);

        jMenu1.setText("FILE");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("NEW FILE");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("IMPORT FILE");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("WINDOW");

        jMenu4.setText("CLEAR");

        jMenuItem3.setText("Clear Command Line:");
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("CLEAR TABLE");
        jMenu4.add(jMenuItem4);

        jMenu2.add(jMenu4);

        jMenuItem7.setText("REFRESH TREES");
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("HELP");

        jMenuItem5.setText("PRODUCT STRUCTURE");
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("COMMANDS");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(tf_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(tf_busqueda))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jt_arbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_arbolMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
            DefaultTreeModel modeloArbol = (DefaultTreeModel) jt_arbol.getModel();
            Object v = jt_arbol.getSelectionPath().getLastPathComponent();
            nodo_seleccionado = (DefaultMutableTreeNode) v;
             pp_loadRefresh.show(evt.getComponent(), evt.getX(), evt.getY());
        }else{
            System.out.println("No");
        }
                
    }//GEN-LAST:event_jt_arbolMouseClicked

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel modeloTabla=(DefaultTableModel)jt_tabla.getModel();
        String textoField=tf_busqueda.getText();
        String []token=textoField.split(" ");
        String nuevo=token[1];
        
        //
        if (token[0].equalsIgnoreCase("./load")) {
            try {
                cargarArchivo(nuevo);
            } catch (IOException ex) {
                ;
            }
        } else if (token[0].equalsIgnoreCase("./create")) {
            String nombreArchivo = JOptionPane.showInputDialog("Ingrese el nombre del nuevo archivo");
            try {
                agregarArchivo(nombreArchivo);
            } catch (IOException ex) {

            }
        }else if(token[0].equalsIgnoreCase("./clear")){
            modeloTabla.setRowCount(0);
            jt_tabla.setModel(modeloTabla);
        }else if(token[0].equalsIgnoreCase("./refresh")){
            
        }
        
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jt_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_tablaMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
             jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jt_tablaMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String nombreArchivo=JOptionPane.showInputDialog(this,"Ingrese el nombre del nuevo archivo");
        try {
            agregarArchivo(nombreArchivo);
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        String nombreArchivo=JOptionPane.showInputDialog(this,"Ingrese el nombre del archivo");
        try {
            cargarArchivo(nombreArchivo);
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void cargarArchivo(String nombreArchivo) throws IOException{
        adminPrograma admin=new adminPrograma("./"+nombreArchivo);
        
        //clase admin
        
        admin.cargarArchivo();
        
        DefaultTableModel modeloTabla=(DefaultTableModel)jt_tabla.getModel();
        modeloTabla.setRowCount(0);
        Object[] newRow = new Object[6];
        for (int i = 0; i < admin.getListaProductos().size(); i++) {
                    
                    newRow[0] = admin.getListaProductos().get(i).getId();
                    newRow[1] = admin.getListaProductos().get(i).getNombre();
                    newRow[2] = admin.getListaProductos().get(i).getCategory();
                    newRow[3] = admin.getListaProductos().get(i).getPrecio();
                    newRow[4] = admin.getListaProductos().get(i).getAisle();
                    newRow[5] = admin.getListaProductos().get(i).getBin();
                    modeloTabla.addRow(newRow);
                
            }
        
        
           jt_tabla.setModel(modeloTabla);
           
        
    }
    
    private void agregarArchivo(String nombreArchivo) throws IOException{
        adminPrograma admin=new adminPrograma("./"+nombreArchivo);
        DefaultTableModel modeloTabla=(DefaultTableModel)jt_tabla.getModel();
       
        FileWriter fw = null;
        BufferedWriter bw = null;
        try { 
            fw = new FileWriter(new File(nombreArchivo), false);
            bw = new BufferedWriter(fw);
            
            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                int id = 0, category = 0, aisle = 0, bin = 0;
                String nombre = null;
                double precio;
                for (int j = 0; j < modeloTabla.getColumnCount(); j++) {
                    
                    switch (j) {
                        case 0:
                            id=((Producto)modeloTabla.getValueAt(i, j)).getId();
//                            bw.write(((Producto)modeloTabla.getValueAt(i, j)).getId()+",");
                            break;
                        case 1:
                            category=((Producto)modeloTabla.getValueAt(i, j)).getCategory();

                            break;
                        case 2:
                           aisle=((Producto)modeloTabla.getValueAt(i, j)).getBin();

                            break;
                        case 3:
                            bin=((Producto)modeloTabla.getValueAt(i, j)).getAisle();
                            break;
                        case 4:
                            nombre=((Producto)modeloTabla.getValueAt(i, j)).getNombre();

                            break;
                        case 5:
                            precio=((Producto)modeloTabla.getValueAt(i, j)).getPrecio();

                            break;
                        default:
                            ;
                    }
                }//fin primer for
                admin.getListaProductos().add(new Producto(id, category, bin, aisle, nombre, bin));
            }
            admin.cargarArchivo();
            bw.flush();
        } catch (Exception ex) {
        }
        bw.close();
        fw.close();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MAIN().setVisible(true);
            }
        });
    }
DefaultMutableTreeNode nodo_seleccionado;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jt_arbol;
    private javax.swing.JTable jt_tabla;
    private javax.swing.JPopupMenu pp_loadRefresh;
    private javax.swing.JTextField tf_busqueda;
    // End of variables declaration//GEN-END:variables
}
